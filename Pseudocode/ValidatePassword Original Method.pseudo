DECLARE LowerCount, UpperCount, NumberCount : INTEGER

FUNCTION VaildatePassword(Pass : STRING) RETURNS BOOLEAN
    UpperCount <-- 0
    LowerCount <-- 0
    NumberCount <-- 0
    FOR n <-- 1 TO LENGTH(Pass)
        // Checks that there are no special characters
        IF (ASC(MID(Pass, n, 1)) > 64 AND ASC(MID(Pass, n, 1)) < 91) OR (ASC(MID(Pass, n, 1)) > 96 AND ASC(MID(Pass, n, 1)) < 123) OR (ASC(MID(Pass, n, 1)) > 47 AND ASC(MID(Pass, n, 1)) < 58) THEN

            // Checks if current char is uppercase
            IF NOT IS_NUM(MID(Pass, n, 1)) AND MID(Pass, n, 1) = UCASE(MID(Pass, n, 1)) THEN
                UpperCount <-- UpperCount + 1
            ENDIF

            // Checks if current char is lowercase
            IF NOT IS_NUM(MID(Pass, n, 1)) AND MID(Pass, n, 1) = LCASE(MID(Pass, n, 1)) THEN
                LowerCount <-- LowerCount + 1
            ENDIF

            // Checks if current char is a number
            IF ASC(MID(Pass, n, 1)) > 47 AND ASC(MID(Pass, n, 1)) < 58 THEN
                NumberCount <-- NumberCount + 1
            ENDIF
        ELSE
            RETURN FALSE
        ENDIF
    NEXT n

    IF UpperCount > 1 AND LowerCount > 1 AND NumberCount > 2 THEN
        RETURN TRUE
    ELSE RETURN FALSE
    ENDIF
ENDFUNCTION

OUTPUT VaildatePassword("AApp333")